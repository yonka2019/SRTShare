<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/ybDL/8kw5X/JMOI/yTDiP8k
        w4j/JMOI/yTDlf8mwy8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8ttBH/K7SP/yuzov8r
        tIj/K7SI/yuzov8rtI//LbQRAAAAAAAAAAAAAAAAAAAAAAAAAAD/MqQ4/zKkiv8xpYj/MaWI/zGliP8y
        par/MaWI/zGliP8ypar/MaWI/zGliP8xpYj/MqSK/zOnNwAAAAAAAAAA/ziVgP82llD/NpaI/zaWiP82
        loj/NpaI/zaWiP82loj/NpaI/zaWiP82loj/NpaI/zeUT/84lYAAAAAAAAAAAP8+h4D/PoeAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8+h4D/PoeAAAAAAAAAAAD/RHqA/0R6gAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/RHqA/0R6gAAAAAAAAAAA/0xqgP9M
        aoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/0xqgP9MaoAAAAAAAAAAAP9S
        XID/UlyA/7bbBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9SXID/UlyAAAAAAAAA
        AAD/WEyA/1hMgP+2uHP/tro7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/WEyA/1hMgAAA
        AAAAAAAA/14+gP9ePoD/wYdb/8KHw/+/hyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/14+gP9e
        PoAAAAAAAAAAAP9kLoD/Yy1Q/2MviP9jL4j/Yy+I/2MviP9jL4j/Yy+I/2MviP9jL4j/Yy+I/2MviP9k
        LU//ZC6AAAAAAAAAAAD/bSE2/2shjP9rIIj/ayCI/2sgiP9rIIj/ayCI/2sgiP9rIIj/ayCI/2sgiP9r
        IIj/ayGM/2oiNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+B8AAPgfAADAAwAAoAUAAJ/5AACf+QAAn/kAAJ/5
        AACf+QAAl/kAAKAFAADAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/186/wAA
        AAD/Xzr/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2My/wAAAAD/YzL5/2Mxd/9jMXf/YzF3/2Mxd/9j
        MXf/YzF3/2Mxd/9jMXf/YzF3/2Mxd/9jMXf/YzF3/2Mxd/9jMXf/YzF3/2Mxd/9jMXf/YzF3/2Mxd/9j
        MXf/YzL4AAAAAP9jMv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/Ziv/AAAAAP9lK07/ZSuI/2UriP9l
        K4j/ZSuI/2UriP9lK4j/ZSuI/2UriP9lK4j/ZSuI/2UriP9lK4j/ZSuI/2UriP9lK4j/ZSuI/2UriP9l
        K4j/ZSuI/2UriP9nK00AAAAA/2Yr/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9pI9r/aSKN/2kid/9p
        Inf/aSJ3/2kid/9pInf/aSJ3/2kid/9pInf/aSJ3/2kid/9pInf/aSJ3/2kid/9pInf/aSJ3/2kid/9p
        Inf/aSJ3/2kid/9pInf/aSJ3/2kid/9oIo7/aSPYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2wfIf9t
        HXz/bRyI/20ciP9tHIj/bRyI/20ciP9tHIj/bRyI/20ciP9tHIj/bRyI/20ciP9tHIj/bRyI/20ciP9t
        HIj/bRyI/20ciP9tHIj/bRyI/20ciP9tHIj/bRyI/20dfP9sHyEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////4AB///f+///4Af///vf/+AA
        AAfv///36AAAF+v//9fr///X6///1+v//9fr///X6///1+v//9fr///X6v//1+p//9fqP//X6z//1+v/
        /9fsAAA35///5/gAAB//////////////////////
</value>
  </data>
</root>